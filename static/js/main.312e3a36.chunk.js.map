{"version":3,"sources":["TodoItems.js","App.js","index.js"],"names":["TodoItems","props","state","completed","handleClick","bind","this","setState","prevState","styleInfo","className","type","onClick","style","textDecoration","task","React","Component","App","items","currentItem","txt","key","handleInput","addItems","handleDelete","event","target","value","Date","now","preventDefault","newItems","Items","push","updated","filter","i","onSubmit","placeholder","onChange","map","todo","ReactDOM","render","document","getElementById"],"mappings":"wNAiCeA,E,kDA5BX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,WAAY,GAEhB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBALJ,E,+CAQnB,WACIC,KAAKC,UAAS,SAACC,GACX,MAAO,CACHL,WAAaK,EAAUL,gB,oBAKnC,WACI,IAAMM,EAAYH,KAAKJ,MAAMC,UAAY,eAAiB,OAE1D,OACI,sBAAKO,UAAY,YAAjB,UACI,wBAAQC,KAAK,SAASC,QAAWN,KAAKF,YAAtC,qBACA,wBAAOS,MAAS,CAACC,eAAiBL,GAAlC,cAAiDH,KAAKL,MAAMc,KAA5D,c,GAvBQC,IAAMC,WCiGfC,G,wDAhGX,aAAc,IAAD,8BACT,gBAEKhB,MAAQ,CACTiB,MAAQ,GACRC,YAAc,CACVC,IAAK,GACLC,IAAK,GACLnB,WAAY,IAIxB,EAAKoB,YAAc,EAAKA,YAAYlB,KAAjB,gBACnB,EAAKmB,SAAW,EAAKA,SAASnB,KAAd,gBAChB,EAAKoB,aAAe,EAAKA,aAAapB,KAAlB,gBAdP,E,+CAmBb,SAAYqB,GACRpB,KAAKC,SAAS,CACVa,YAAc,CACVC,IAAMK,EAAMC,OAAOC,MACnBN,IAAMO,KAAKC,MACX3B,WAAY,O,sBAKxB,SAASuB,GACLA,EAAMK,iBACN,IAAMC,EAAW1B,KAAKJ,MAAMkB,YAE5B,GAAoB,KAAjBY,EAASX,IAAW,CACnB,IAAMY,EAAQ3B,KAAKJ,MAAMiB,MACzBc,EAAMC,KAAKF,GAIX1B,KAAKC,SAAS,CACVY,MAAOc,EACPb,YAAc,CACVC,IAAK,GACLC,IAAK,GACLnB,WAAY,Q,0BAM5B,SAAamB,GACT,IAEMa,EAFO7B,KAAKJ,MAAMiB,MAEHiB,QAAO,SAACC,GAAD,OAAOA,EAAEf,MAAQA,KAE7ChB,KAAKC,SAAS,CACVY,MAAQgB,M,oBAIhB,WAAS,IAAD,OACJ,OACI,sBAAKzB,UAAU,YAAf,UACG,gDACA,uBAAMA,UAAW,MAAjB,UACK,uBAAM4B,SAAYhC,KAAKkB,SAAvB,UACI,uBACIb,KAAO,OACP4B,YAAY,aACZ7B,UAAY,aACZkB,MAAStB,KAAKJ,MAAMkB,YAAYC,IAChCmB,SAAYlC,KAAKiB,cAErB,wBAAQZ,KAAO,SAAf,sBAGJ,8BAEQL,KAAKJ,MAAMiB,MAAMsB,KAAI,SAACC,GAAD,OAAU,sBAAKhC,UAAY,gBAAjB,UACK,cAAC,EAAD,CACIK,KAAQ2B,EAAKrB,MAGjB,wBAAQT,QAAW,kBAAM,EAAKa,aAAaiB,EAAKpB,MAAhD,mBALmCoB,EAAKpB,oB,GA/EtFN,IAAMC,YCExB0B,IAASC,OAAQ,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.312e3a36.chunk.js","sourcesContent":["import React from 'react'\r\nimport './index.css'\r\n\r\n\r\nclass TodoItems extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            completed : false\r\n        }\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    handleClick () {\r\n        this.setState((prevState) => {\r\n            return {\r\n                completed : !prevState.completed\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const styleInfo = this.state.completed ? \"line-through\" : \"none\";\r\n\r\n        return (\r\n            <div className = \"Item-list\">\r\n                <button type=\"submit\" onClick = {this.handleClick} > Done! </button>\r\n                <label style = {{textDecoration : styleInfo}} > {this.props.task} </label>      \r\n            </div>\r\n        ) \r\n    }\r\n}\r\n\r\nexport default TodoItems;","import React from 'react';\r\nimport TodoItems from './TodoItems.js';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n    constructor(){\r\n        super()\r\n\r\n        this.state = {\r\n            items : [],\r\n            currentItem : {\r\n                txt: \"\",\r\n                key: \"\",\r\n                completed : false\r\n            }\r\n        }\r\n\r\n    this.handleInput = this.handleInput.bind(this)\r\n    this.addItems = this.addItems.bind(this)\r\n    this.handleDelete = this.handleDelete.bind(this)\r\n\r\n    }\r\n\r\n\r\n    handleInput(event){\r\n        this.setState({\r\n            currentItem : {\r\n                txt : event.target.value,\r\n                key : Date.now(),\r\n                completed : false\r\n            }\r\n        })\r\n    }\r\n\r\n    addItems(event){\r\n        event.preventDefault();\r\n        const newItems = this.state.currentItem\r\n\r\n        if(newItems.txt !== \"\"){\r\n            const Items = this.state.items\r\n            Items.push(newItems)\r\n\r\n            // console.log(newItems)\r\n\r\n            this.setState({\r\n                items: Items,\r\n                currentItem : {\r\n                    txt: \"\",\r\n                    key: \"\",\r\n                    completed : false\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleDelete(key){\r\n        const list = this.state.items\r\n\r\n        const updated = list.filter((i) => i.key !== key)\r\n\r\n        this.setState({\r\n            items : updated\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"Todo-List\">\r\n               <h1>Todo Task List</h1>\r\n               <main className= \"App\">\r\n                    <form onSubmit = {this.addItems}>\r\n                        <input \r\n                            type = \"Text\" \r\n                            placeholder=\"Input Task\" \r\n                            className = \"Input-Text\"\r\n                            value = {this.state.currentItem.txt}\r\n                            onChange = {this.handleInput}\r\n                        />\r\n                        <button type = \"submit\"> Add!</button>\r\n                    </form>\r\n\r\n                    <div >\r\n                        {\r\n                            this.state.items.map((todo) => <div className = \"list-of-items\" key = {todo.key}> \r\n                                                                <TodoItems \r\n                                                                    task = {todo.txt} \r\n                                                                    //completed = {todo.completed}\r\n                                                                /> \r\n                                                                <button onClick = {() => this.handleDelete(todo.key)}> X </button>\r\n                                                            </div>)\r\n                        }\r\n                    </div>\r\n                \r\n               </main>\r\n               \r\n   \r\n           </div>\r\n       )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport './index.css';\n\n\nReactDOM.render( <App />, document.getElementById('root') );\n\n"],"sourceRoot":""}